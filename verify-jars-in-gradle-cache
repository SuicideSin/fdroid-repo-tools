#!/usr/bin/env python

import os
import subprocess
import sys
import urllib2  # on < python 2.7.9, this does not verify HTTPS

proxy = urllib2.ProxyHandler({'https': 'http://127.0.0.1:8118'})
opener = urllib2.build_opener(proxy)
urllib2.install_opener(opener)

gradlehome = os.getenv('GRADLE_USER_HOME')
if gradlehome is None:
    gradlehome = os.path.join(os.getenv('HOME'), '.gradle')
print('gradlehome = ' + gradlehome)
jarcacheroot = os.path.join(gradlehome, 'caches', 'modules-2', 'files-2.1')
gnupghome = os.path.join(gradlehome, 'gnupg')

nosigavailble = []

def verify_gpg_sig(ascpath):
    try:
        r = subprocess.check_output(['gpg2', '--quiet', '--homedir', gnupghome,
                                     '--trust-model', 'always',
                                     '--verify', ascpath],
                                    stderr=subprocess.STDOUT)
    except subprocess.CalledProcessError as e:
        print(ascpath + " FAILED VERIFY!")
        print(e.output)
        sys.exit(1)


for root, dirs, files in os.walk(jarcacheroot):
    for f in files:
        if f.endswith('.asc') or f.endswith('.sig'):
            verify_gpg_sig(os.path.join(root, f))
        path = os.path.join(root, f)
        if (f.endswith('.jar') or f.endswith('.pom')) \
                and not (os.path.exists(path + '.asc') or os.path.exists(path + '.sig')):
            # strip the SHA1 dir from the path
            p = os.path.dirname(root).replace(jarcacheroot, '')
            version = os.path.basename(p)
            ascfile = f + '.asc'
            urlpath = os.path.dirname(p).replace('.', '/') + '/' + version + '/' + ascfile
            url = 'https://jcenter.bintray.com' + urlpath
            try:
                urlf = urllib2.urlopen(url)
                with open(os.path.join(root, ascfile), 'w') as ascf:
                    ascf.write(urlf.read())
                urlf.close()
                print 'Got', url
                verify_gpg_sig(os.path.join(root, f + '.asc'))
            except urllib2.HTTPError:
                nosigavailble.append(os.path.join(root, f))

for f in nosigavailble:
    print(f + " HAS NO PGP SIGNATURE!")
